{"title":"Limpieza de Datos Electorales: Parte 1","markdown":{"yaml":{"title":"Limpieza de Datos Electorales: Parte 1","css":"custom.css","execute":{"enabled":true,"kernel":"R"}},"headingText":"Cargamos las Librerías:","headingAttr":{"id":"","classes":["fade-in"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n```{r}\nsource('/home/barea/limpieza/ayuntamientos/model/R/script.R')\n```\n\n## Proceso Electoral 2015: {.fade-in}\n\n### Cargar los Archivos del Proceso Electoral 2015: {.fade-in}\nEn esta sección, cargamos todos los archivos CSV del proceso electoral del año 2015 desde la carpeta especificada.\n```{r}\narchivos_csv_2015 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2015\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nAquí mostramos la lista de archivos CSV que se han cargado para verificar que se han leído correctamente.\n```{r}\nprint(archivos_csv_2015)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEn esta sección, aplicamos una función de limpieza a cada uno de los archivos CSV cargados para preparar los datos para su análisis.\n```{r}\ndatos_2015 <- purrr::map_dfr(archivos_csv_2015, limpiar_datos)\n```\n\n### Mostrar el Resultado: {.fade-in}\nMostramos los datos limpios en una tabla interactiva para una revisión visual rápida.\n```{r}\nreactable(datos_2015)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nFinalmente, guardamos los datos limpios en un archivo CSV en la carpeta 'preprocessed' para su uso posterior.\n```{r}\n# write_csv(datos_2015, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2015.csv\")\n```\nSe añade comentario para evitar sobreescritura de los csv. Lo cual aplica en los procesos electorales futuros.\n\n\n## Proceso Electoral 2016: {.fade-in}\nEn esta sección, se procesarán los datos del proceso electoral del año 2016.\n\n### Cargar los Archivos del Proceso Electoral 2016: {.fade-in}\nEn este paso, se cargan todos los archivos CSV que contienen los datos del proceso electoral 2016 desde la carpeta especificada.\n```{r}\narchivos_csv_2016 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2016\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nAquí se imprimen los nombres de los archivos CSV que se han cargado para verificar que se han leído correctamente.\n```{r}\nprint(archivos_csv_2016)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEn este paso, se aplica la función `limpiar_datos` a cada archivo CSV cargado para limpiar y transformar los datos. La función `purrr::map_dfr` se utiliza para combinar los datos limpios en un solo data frame.\n```{r}\ndatos_2016 <- purrr::map_dfr(archivos_csv_2016, limpiar_datos)\n```\n\n### Mostrar el Resultado: {.fade-in}\nAquí se muestra el data frame resultante de los datos limpios utilizando la función `reactable` para una visualización interactiva.\n```{r}\nreactable(datos_2016)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nFinalmente, se guardan los datos limpios y procesados en un archivo CSV en la carpeta 'preprocessed' para su uso posterior.\n```{r}\n# write_csv(datos_2016, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2016.csv\")\n```\n\n\n# Proceso Electoral 2017: {.fade-in}\nCargar archivos CSV:\nEsta sección busca todos los archivos CSV en la carpeta especificada para el año 2017.\n```{r}\narchivos_csv_2017 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2017\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nEsta sección imprime la lista de archivos CSV que se han encontrado y cargado.\n```{r}\nprint(archivos_csv_2017)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEsta sección aplica la función 'limpiar_datos' a cada archivo CSV cargado y combina los resultados en un solo data frame.\n```{r}\ndatos_2017 <- purrr::map_dfr(archivos_csv_2017, limpiar_datos)\n```\n\n### Mostrar el Resultado: {.fade-in}\nEsta sección muestra el data frame resultante en una tabla interactiva.\n```{r}\nreactable(datos_2017)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nEsta sección guarda el data frame limpio en un archivo CSV en la carpeta 'preprocessed'.\n```{r}\n# write_csv(datos_2017, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2017.csv\")\n```\n\n\n# Proceso Electoral 2018: {.fade-in}\nEste documento describe el proceso de carga, limpieza y almacenamiento de datos electorales del año 2018.\n\n### Cargar Archivos CSV: {.fade-in}\nEn esta sección, se cargan todos los archivos CSV ubicados en la carpeta especificada para el año 2018.\n\n```{r}\narchivos_csv_2018 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2018\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nAquí se imprimen los nombres de los archivos CSV que se han cargado para verificar que se han leído correctamente.\n\n```{r}\nprint(archivos_csv_2018)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEn esta sección, se aplica una función de limpieza a cada archivo CSV cargado. La función `limpiar_datos_2018` se utiliza para transformar y limpiar los datos.\n\n```{r}\ndatos_2018 <- purrr::map_dfr(archivos_csv_2018, limpiar_datos_2018)\n```\n\n### Mostrar el Resultado: {.fade-in}\nSe muestra una tabla interactiva con los datos limpios utilizando la función `reactable`.\n\n```{r}\nreactable(datos_2018)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nFinalmente, los datos limpios se guardan en un archivo CSV en la carpeta 'preprocessed' para su uso posterior.\n\n```{r}\n# write_csv(datos_2018, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2018.csv\")\n```\n\n\n# Proceso Electoral 2019: {.fade-in}\nEste bloque de código carga todos los archivos CSV del directorio especificado que contienen datos del proceso electoral de 2019.\n\n```{r}\narchivos_csv_2019 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2019_2020\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nEste bloque imprime la lista de archivos CSV que se han cargado desde el directorio especificado.\n\n```{r}\nprint(archivos_csv_2019)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEste bloque aplica la función `limpiar_datos_2018` a cada archivo CSV cargado, combinando los resultados en un solo data frame llamado `datos_2019`.\n\n```{r}\ndatos_2019 <- purrr::map_dfr(archivos_csv_2019, limpiar_datos_2018)\n```\n\n### Mostrar el Resultado: {.fade-in}\nEste bloque muestra el data frame `datos_2019` en una tabla interactiva utilizando la función `reactable`.\n\n```{r}\nreactable(datos_2019)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nEste bloque guarda el data frame `datos_2019` en un archivo CSV en la carpeta 'preprocessed'.\n\n```{r}\n# write_csv(datos_2019, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2019.csv\")\n```\n\n\n# Proceso Electoral 2021: {.fade-in}\nEste código carga todos los archivos CSV del directorio especificado para el año 2021.\n\n```{r}\narchivos_csv_2021 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2021\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nEste bloque de código imprime la lista de archivos CSV que se han cargado desde el directorio especificado.\n\n```{r}\nprint(archivos_csv_2021)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nAquí se aplica la función `limpiar_datos_2018` a cada archivo CSV cargado, combinando los resultados en un solo data frame.\n\n```{r}\ndatos_2021 <- purrr::map_dfr(archivos_csv_2021, limpiar_datos_2018)\n```\n\n### Mostrar el Resultado: {.fade-in}\nEste bloque de código muestra el data frame resultante en una tabla interactiva.\n\n```{r}\nreactable(datos_2021)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nFinalmente, se guarda el data frame resultante en un archivo CSV en la carpeta 'preprocessed'.\n\n```{r}\n# write_csv(datos_2021, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2021.csv\")\n```\n\n\n# Proceso Electoral 2022-2023: {.fade-in}\nEn este documento, se realiza la carga y limpieza de los datos electorales del periodo 2022-2023.\n\n### Mostrar los Archivos Cargados: {.fade-in}\nEn esta sección, se listan todos los archivos CSV encontrados en la carpeta especificada.\n```{r}\t\narchivos_csv_2022 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2022_2023\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nAquí se imprimen los nombres de los archivos CSV cargados para verificar que se han leído correctamente.\n```{r}\nprint(archivos_csv_2022)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nSe aplica una función de limpieza a cada uno de los archivos CSV cargados para unificar y preparar los datos.\n```{r}\ndatos_2022 <- purrr::map_dfr(archivos_csv_2022, limpiar_datos_2018)\n```\n\n### Mostrar el Resultado: {.fade-in}\nSe muestra una tabla interactiva con los datos limpios para su revisión.\n```{r}\nreactable(datos_2022)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed':\nFinalmente, se guardan los datos limpios en un archivo CSV en la carpeta 'preprocessed'.\n```{r}\n# write_csv(datos_2022, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2022.csv\")\n```","srcMarkdownNoYaml":"\n## Cargamos las Librerías: {.fade-in}\n\n```{r}\nsource('/home/barea/limpieza/ayuntamientos/model/R/script.R')\n```\n\n## Proceso Electoral 2015: {.fade-in}\n\n### Cargar los Archivos del Proceso Electoral 2015: {.fade-in}\nEn esta sección, cargamos todos los archivos CSV del proceso electoral del año 2015 desde la carpeta especificada.\n```{r}\narchivos_csv_2015 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2015\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nAquí mostramos la lista de archivos CSV que se han cargado para verificar que se han leído correctamente.\n```{r}\nprint(archivos_csv_2015)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEn esta sección, aplicamos una función de limpieza a cada uno de los archivos CSV cargados para preparar los datos para su análisis.\n```{r}\ndatos_2015 <- purrr::map_dfr(archivos_csv_2015, limpiar_datos)\n```\n\n### Mostrar el Resultado: {.fade-in}\nMostramos los datos limpios en una tabla interactiva para una revisión visual rápida.\n```{r}\nreactable(datos_2015)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nFinalmente, guardamos los datos limpios en un archivo CSV en la carpeta 'preprocessed' para su uso posterior.\n```{r}\n# write_csv(datos_2015, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2015.csv\")\n```\nSe añade comentario para evitar sobreescritura de los csv. Lo cual aplica en los procesos electorales futuros.\n\n\n## Proceso Electoral 2016: {.fade-in}\nEn esta sección, se procesarán los datos del proceso electoral del año 2016.\n\n### Cargar los Archivos del Proceso Electoral 2016: {.fade-in}\nEn este paso, se cargan todos los archivos CSV que contienen los datos del proceso electoral 2016 desde la carpeta especificada.\n```{r}\narchivos_csv_2016 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2016\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nAquí se imprimen los nombres de los archivos CSV que se han cargado para verificar que se han leído correctamente.\n```{r}\nprint(archivos_csv_2016)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEn este paso, se aplica la función `limpiar_datos` a cada archivo CSV cargado para limpiar y transformar los datos. La función `purrr::map_dfr` se utiliza para combinar los datos limpios en un solo data frame.\n```{r}\ndatos_2016 <- purrr::map_dfr(archivos_csv_2016, limpiar_datos)\n```\n\n### Mostrar el Resultado: {.fade-in}\nAquí se muestra el data frame resultante de los datos limpios utilizando la función `reactable` para una visualización interactiva.\n```{r}\nreactable(datos_2016)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nFinalmente, se guardan los datos limpios y procesados en un archivo CSV en la carpeta 'preprocessed' para su uso posterior.\n```{r}\n# write_csv(datos_2016, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2016.csv\")\n```\n\n\n# Proceso Electoral 2017: {.fade-in}\nCargar archivos CSV:\nEsta sección busca todos los archivos CSV en la carpeta especificada para el año 2017.\n```{r}\narchivos_csv_2017 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2017\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nEsta sección imprime la lista de archivos CSV que se han encontrado y cargado.\n```{r}\nprint(archivos_csv_2017)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEsta sección aplica la función 'limpiar_datos' a cada archivo CSV cargado y combina los resultados en un solo data frame.\n```{r}\ndatos_2017 <- purrr::map_dfr(archivos_csv_2017, limpiar_datos)\n```\n\n### Mostrar el Resultado: {.fade-in}\nEsta sección muestra el data frame resultante en una tabla interactiva.\n```{r}\nreactable(datos_2017)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nEsta sección guarda el data frame limpio en un archivo CSV en la carpeta 'preprocessed'.\n```{r}\n# write_csv(datos_2017, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2017.csv\")\n```\n\n\n# Proceso Electoral 2018: {.fade-in}\nEste documento describe el proceso de carga, limpieza y almacenamiento de datos electorales del año 2018.\n\n### Cargar Archivos CSV: {.fade-in}\nEn esta sección, se cargan todos los archivos CSV ubicados en la carpeta especificada para el año 2018.\n\n```{r}\narchivos_csv_2018 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2018\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nAquí se imprimen los nombres de los archivos CSV que se han cargado para verificar que se han leído correctamente.\n\n```{r}\nprint(archivos_csv_2018)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEn esta sección, se aplica una función de limpieza a cada archivo CSV cargado. La función `limpiar_datos_2018` se utiliza para transformar y limpiar los datos.\n\n```{r}\ndatos_2018 <- purrr::map_dfr(archivos_csv_2018, limpiar_datos_2018)\n```\n\n### Mostrar el Resultado: {.fade-in}\nSe muestra una tabla interactiva con los datos limpios utilizando la función `reactable`.\n\n```{r}\nreactable(datos_2018)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nFinalmente, los datos limpios se guardan en un archivo CSV en la carpeta 'preprocessed' para su uso posterior.\n\n```{r}\n# write_csv(datos_2018, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2018.csv\")\n```\n\n\n# Proceso Electoral 2019: {.fade-in}\nEste bloque de código carga todos los archivos CSV del directorio especificado que contienen datos del proceso electoral de 2019.\n\n```{r}\narchivos_csv_2019 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2019_2020\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nEste bloque imprime la lista de archivos CSV que se han cargado desde el directorio especificado.\n\n```{r}\nprint(archivos_csv_2019)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nEste bloque aplica la función `limpiar_datos_2018` a cada archivo CSV cargado, combinando los resultados en un solo data frame llamado `datos_2019`.\n\n```{r}\ndatos_2019 <- purrr::map_dfr(archivos_csv_2019, limpiar_datos_2018)\n```\n\n### Mostrar el Resultado: {.fade-in}\nEste bloque muestra el data frame `datos_2019` en una tabla interactiva utilizando la función `reactable`.\n\n```{r}\nreactable(datos_2019)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nEste bloque guarda el data frame `datos_2019` en un archivo CSV en la carpeta 'preprocessed'.\n\n```{r}\n# write_csv(datos_2019, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2019.csv\")\n```\n\n\n# Proceso Electoral 2021: {.fade-in}\nEste código carga todos los archivos CSV del directorio especificado para el año 2021.\n\n```{r}\narchivos_csv_2021 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2021\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nEste bloque de código imprime la lista de archivos CSV que se han cargado desde el directorio especificado.\n\n```{r}\nprint(archivos_csv_2021)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nAquí se aplica la función `limpiar_datos_2018` a cada archivo CSV cargado, combinando los resultados en un solo data frame.\n\n```{r}\ndatos_2021 <- purrr::map_dfr(archivos_csv_2021, limpiar_datos_2018)\n```\n\n### Mostrar el Resultado: {.fade-in}\nEste bloque de código muestra el data frame resultante en una tabla interactiva.\n\n```{r}\nreactable(datos_2021)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed': {.fade-in}\nFinalmente, se guarda el data frame resultante en un archivo CSV en la carpeta 'preprocessed'.\n\n```{r}\n# write_csv(datos_2021, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2021.csv\")\n```\n\n\n# Proceso Electoral 2022-2023: {.fade-in}\nEn este documento, se realiza la carga y limpieza de los datos electorales del periodo 2022-2023.\n\n### Mostrar los Archivos Cargados: {.fade-in}\nEn esta sección, se listan todos los archivos CSV encontrados en la carpeta especificada.\n```{r}\t\narchivos_csv_2022 <- list.files(path = \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/raw/2022_2023\", pattern = \"\\\\.csv$\", full.names = TRUE)\n```\n\n### Mostrar los Archivos Cargados: {.fade-in}\nAquí se imprimen los nombres de los archivos CSV cargados para verificar que se han leído correctamente.\n```{r}\nprint(archivos_csv_2022)\n```\n\n### Utilizar la Función de Limpieza de Datos: {.fade-in}\nSe aplica una función de limpieza a cada uno de los archivos CSV cargados para unificar y preparar los datos.\n```{r}\ndatos_2022 <- purrr::map_dfr(archivos_csv_2022, limpiar_datos_2018)\n```\n\n### Mostrar el Resultado: {.fade-in}\nSe muestra una tabla interactiva con los datos limpios para su revisión.\n```{r}\nreactable(datos_2022)\n```\n\n### Guardar los Resultados en la Carpeta 'Preprocessed':\nFinalmente, se guardan los datos limpios en un archivo CSV en la carpeta 'preprocessed'.\n```{r}\n# write_csv(datos_2022, \"/home/barea/limpieza/ayuntamientos/{{cookiecutter.project_slug}}/data/preprocessed/datos_2022.csv\")\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":true,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"kernel":"R","engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"vim-dark","css":["custom.css"],"output-file":"01_tarnsformacion_datos.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.39","bibliography":["references.bib"],"sidebar":{"style":"docked","background":"dark"},"comments":{"hypothesis":true},"theme":{"light":["flatly","theme-light.scss"],"dark":["darkly","theme-dark.scss"]},"code-summary":"Mostrar el Código","title":"Limpieza de Datos Electorales: Parte 1"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}